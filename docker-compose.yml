version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=service_weaver
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=service_weaver
      - NODE_ENV=production
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_BASE=/api
        - REACT_APP_WS_BASE=ws://localhost:8080
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network

  # Production version with reverse proxy
  production:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data:/app/data
      - ./ssl:/etc/nginx/ssl
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=service_weaver
      - NODE_ENV=production
      - FRONTEND_URL=http://localhost
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - production

volumes:
  data:
  postgres_data:

networks:
  app-network:
    driver: bridge